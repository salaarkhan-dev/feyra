(globalThis.TURBOPACK||(globalThis.TURBOPACK=[])).push(["object"==typeof document?document.currentScript:void 0,52683,e=>{"use strict";e.s(["default",()=>f],52683);var n=e.i(43476),t=e.i(71645);let i="\nattribute vec4 aVertexPosition;\nattribute vec2 aTextureCoord;\nvarying vec2 vTextureCoord;\nvoid main() {\n  gl_Position = aVertexPosition;\n  vTextureCoord = aTextureCoord;\n}\n",o=[{id:1,name:"Flowing Waves",theme:"flowing-waves",fragmentShader:"\nprecision mediump float;\nuniform vec2 iResolution;\nuniform float iTime;\nuniform vec2 iMouse;\nuniform bool hasActiveReminders;\nuniform bool hasUpcomingReminders;\nuniform bool disableCenterDimming;\nuniform bool useCircularMask;\nvarying vec2 vTextureCoord;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n  // Calculate distance from center for dimming the center\n  vec2 center = iResolution.xy * 0.5;\n  float dist = distance(fragCoord, center);\n  float radius = min(iResolution.x, iResolution.y) * 0.5;\n  \n  // Create a dimming factor for the center area (30% of the radius)\n  float centerDim = disableCenterDimming ? 1.0 : smoothstep(radius * 0.3, radius * 0.5, dist);\n\n  for(float i = 1.0; i < 10.0; i++){\n    uv.x += 0.6 / i * cos(i * 2.5 * uv.y + iTime);\n    uv.y += 0.6 / i * cos(i * 1.5 * uv.x + iTime);\n  }\n  // Determine color based on reminder state\n  if (hasActiveReminders) {\n    // Blue shade for active reminders\n    fragColor = vec4(vec3(0.1, 0.3, 0.6) / abs(sin(iTime - uv.y - uv.x)), 1.0);\n  } else if (hasUpcomingReminders) {\n    // Green shade for upcoming reminders\n    fragColor = vec4(vec3(0.1, 0.5, 0.2) / abs(sin(iTime - uv.y - uv.x)), 1.0);\n  } else {\n    // Original neutral color\n    fragColor = vec4(vec3(0.1) / abs(sin(iTime - uv.y - uv.x)), 1.0);\n  }\n  \n  // Apply center dimming only if not disabled\n  if (!disableCenterDimming) {\n    fragColor.rgb = mix(fragColor.rgb * 0.3, fragColor.rgb, centerDim);\n  }\n}\n\nvoid main() {\n  vec2 fragCoord = vTextureCoord * iResolution;\n  if (useCircularMask) {\n    // Calculate distance from center for circular mask\n    vec2 center = iResolution * 0.5;\n    float dist = distance(fragCoord, center);\n    float radius = min(iResolution.x, iResolution.y) * 0.5;\n    if (dist < radius) {\n      vec4 color;\n      mainImage(color, fragCoord);\n      gl_FragColor = color;\n    } else {\n      discard;\n    }\n  } else {\n    vec4 color; \n    mainImage(color, fragCoord);\n    gl_FragColor = color;\n  }\n}\n",color:"#6366f1"},{id:2,name:"Ether",theme:"ether",fragmentShader:"\nprecision mediump float;\nuniform vec2 iResolution;\nuniform float iTime;\nuniform vec2 iMouse;\nuniform bool hasActiveReminders;\nuniform bool hasUpcomingReminders;\nuniform bool disableCenterDimming;\nuniform bool useCircularMask;\nvarying vec2 vTextureCoord;\n\n// Ether by nimitz 2014 (twitter: @stormoid)\n// https://www.shadertoy.com/view/MsjSW3\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n\n#define t iTime\nmat2 m(float a){float c=cos(a), s=sin(a);return mat2(c,-s,s,c);}\nfloat map(vec3 p, bool isActive, bool isUpcoming){\n    p.xz*= m(t*0.4);p.xy*= m(t*0.3);\n    vec3 q = p*2.+t;\n    return length(p+vec3(sin(t*0.7)))*log(length(p)+1.) + sin(q.x+sin(q.z+sin(q.y)))*0.5 - 1.;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Calculate aspect-corrected UV coordinates\n    vec2 p = (fragCoord.xy - iResolution.xy * 0.5) / min(iResolution.x, iResolution.y);\n    // Center the effect properly\n    p *= 1.8;\n    \n    vec3 cl = vec3(0.);\n    float d = 2.5;\n    \n    // Ray marching loop\n    for(int i=0; i<=5; i++) {\n        vec3 p3d = vec3(0,0,5.) + normalize(vec3(p, -1.))*d;\n        float rz = map(p3d, hasActiveReminders, hasUpcomingReminders);\n        float f = clamp((rz - map(p3d+.1, hasActiveReminders, hasUpcomingReminders))*0.5, -.1, 1.);\n        \n        // Adjust colors based on reminder states\n        vec3 baseColor;\n        if(hasActiveReminders) {\n            // Blue palette for active reminders\n            baseColor = vec3(0.05, 0.2, 0.5) + vec3(4.0, 2.0, 5.0)*f;\n        } else if(hasUpcomingReminders) {\n            // Green palette for upcoming reminders\n            baseColor = vec3(0.05, 0.3, 0.1) + vec3(2.0, 5.0, 1.0)*f;\n        } else {\n            // Original purple-blue palette\n            baseColor = vec3(0.1, 0.3, 0.4) + vec3(5.0, 2.5, 3.0)*f;\n        }\n        \n        cl = cl*baseColor + smoothstep(2.5, .0, rz)*.7*baseColor;\n        d += min(rz, 1.);\n    }\n    \n    // Add subtle mouse interaction\n    float mouseInfluence = 0.0;\n    if(iMouse.x > 0.0 || iMouse.y > 0.0) {\n        vec2 mousePos = iMouse.xy;\n        float mouseDist = length(p - (mousePos*2.0-vec2(1.0))*0.5);\n        mouseInfluence = smoothstep(0.6, 0.0, mouseDist);\n        \n        // Add subtle glow around mouse\n        if(hasActiveReminders) {\n            cl += vec3(0.2, 0.4, 1.0) * mouseInfluence * 0.3;\n        } else if(hasUpcomingReminders) {\n            cl += vec3(0.2, 1.0, 0.4) * mouseInfluence * 0.3;\n        } else {\n            cl += vec3(0.5, 0.3, 0.7) * mouseInfluence * 0.3;\n        }\n    }\n    \n    // Calculate distance from center for dimming the center\n    vec2 center = iResolution.xy * 0.5;\n    float dist = distance(fragCoord, center);\n    float radius = min(iResolution.x, iResolution.y) * 0.5;\n    \n    // Create a dimming factor for the center area (30% of the radius)\n    float centerDim = disableCenterDimming ? 1.0 : smoothstep(radius * 0.3, radius * 0.5, dist);\n    \n    fragColor = vec4(cl, 1.0);\n    \n    // Apply center dimming only if not disabled\n    if (!disableCenterDimming) {\n        fragColor.rgb = mix(fragColor.rgb * 0.3, fragColor.rgb, centerDim);\n    }\n}\n\nvoid main() {\n    vec2 fragCoord = vTextureCoord * iResolution;\n    if (useCircularMask) {\n        // Calculate distance from center for circular mask\n        vec2 center = iResolution * 0.5;\n        float dist = distance(fragCoord, center);\n        float radius = min(iResolution.x, iResolution.y) * 0.5;\n        if (dist < radius) {\n            vec4 color;\n            mainImage(color, fragCoord);\n            gl_FragColor = color;\n        } else {\n            discard;\n        }\n    } else {\n        vec4 color; \n        mainImage(color, fragCoord);\n        gl_FragColor = color;\n    }\n}\n",color:"#8b5cf6"},{id:3,name:"Shooting Stars",theme:"shooting-stars",fragmentShader:"\nprecision mediump float;\nuniform vec2 iResolution;\nuniform float iTime;\nuniform vec2 iMouse;\nuniform bool hasActiveReminders;\nuniform bool hasUpcomingReminders;\nuniform bool disableCenterDimming;\nuniform bool useCircularMask;\nvarying vec2 vTextureCoord;\n\nvoid mainImage(out vec4 O, in vec2 fragCoord) {\n  O = vec4(0.0, 0.0, 0.0, 1.0);\n  vec2 b = vec2(0.0, 0.2);\n  vec2 p;\n  mat2 R = mat2(1.0, 0.0, 0.0, 1.0); // Initial identity matrix\n  \n  // Calculate distance from center for dimming the center\n  vec2 center = iResolution.xy * 0.5;\n  float dist = distance(fragCoord, center);\n  float radius = min(iResolution.x, iResolution.y) * 0.5;\n  \n  // Create a dimming factor for the center area (30% of the radius)\n  float centerDim = disableCenterDimming ? 1.0 : smoothstep(radius * 0.3, radius * 0.5, dist);\n  \n  // Using a proper GLSL loop structure\n  for(int i = 0; i < 20; i++) {\n    float fi = float(i) + 1.0; // Starting from 1.0\n    \n    // Create rotation matrix for this iteration\n    float angle = fi + 0.0;\n    float c = cos(angle);\n    float s = sin(angle);\n    R = mat2(c, -s, s, c);\n    \n    // Second rotation for effect\n    float angle2 = fi + 33.0;\n    float c2 = cos(angle2);\n    float s2 = sin(angle2);\n    mat2 R2 = mat2(c2, -s2, s2, c2);\n    \n    // Calculate position with proper aspect ratio\n    vec2 coord = (fragCoord - iResolution.xy * 0.5) / min(iResolution.x, iResolution.y) * fi * 0.1 + iTime * b;\n    vec2 frac_coord = fract(coord * R2) - 0.5;\n    p = R * frac_coord;\n    vec2 clamped_p = clamp(p, -b, b);\n    \n    // Calculate intensity and color\n    float len = length(clamped_p - p);\n    if (len > 0.0) {\n      vec4 star = 1e-3 / len * (cos(p.y / 0.1 + vec4(0.0, 1.0, 2.0, 3.0)) + 1.0);\n      O += star;\n    }\n  }\n  \n  // Adjust colors based on reminder state\n  if (hasActiveReminders) {\n    // Blue for active reminders\n    O.rgb = mix(O.rgb, vec3(0.2, 0.4, 1.0), 0.3);\n  } else if (hasUpcomingReminders) {\n    // Green for upcoming reminders\n    O.rgb = mix(O.rgb, vec3(0.2, 1.0, 0.4), 0.3);\n  }\n  \n  // Apply center dimming only if not disabled\n  if (!disableCenterDimming) {\n    O.rgb = mix(O.rgb * 0.3, O.rgb, centerDim);\n  }\n}\n\nvoid main() {\n  vec2 fragCoord = vTextureCoord * iResolution;\n  if (useCircularMask) {\n    // Calculate distance from center for circular mask\n    vec2 center = iResolution * 0.5;\n    float dist = distance(fragCoord, center);\n    float radius = min(iResolution.x, iResolution.y) * 0.5;\n    if (dist < radius) {\n      vec4 color;\n      mainImage(color, fragCoord);\n      gl_FragColor = color;\n    } else {\n      discard;\n    }\n  } else {\n    vec4 color;\n    mainImage(color, fragCoord);\n    gl_FragColor = color;\n  }\n}\n",color:"#ec4899"},{id:4,name:"Wavy Lines",theme:"wavy-lines",fragmentShader:"\nprecision mediump float;\nuniform vec2 iResolution;\nuniform float iTime;\nuniform vec2 iMouse;\nuniform bool hasActiveReminders;\nuniform bool hasUpcomingReminders;\nuniform bool disableCenterDimming;\nuniform bool useCircularMask;\nvarying vec2 vTextureCoord;\n\n#define PI 3.14159265359\n\nfloat hash(float n) {\n    return fract(sin(n) * 43758.5453);\n}\n\nfloat noise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    f = f * f * (3.0 - 2.0 * f);\n    float a = hash(i.x + i.y * 57.0);\n    float b = hash(i.x + 1.0 + i.y * 57.0);\n    float c = hash(i.x + i.y * 57.0 + 1.0);\n    float d = hash(i.x + 1.0 + i.y * 57.0 + 1.0);\n    return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\n}\n\nfloat fbm(vec2 p) {\n    float sum = 0.0;\n    float amp = 0.5;\n    float freq = 1.0;\n    for(int i = 0; i < 6; i++) {\n        sum += amp * noise(p * freq);\n        amp *= 0.5;\n        freq *= 2.0;\n    }\n    return sum;\n}\n\nfloat lines(vec2 uv, float thickness, float distortion) {\n    // Create wavy lines\n    float y = uv.y;\n    \n    // Apply distortion based on fbm noise\n    float distortionAmount = distortion * fbm(vec2(uv.x * 2.0, y * 0.5 + iTime * 0.1));\n    y += distortionAmount;\n    \n    // Create lines with smooth step\n    float linePattern = fract(y * 20.0);\n    float line = smoothstep(0.5 - thickness, 0.5, linePattern) - \n                smoothstep(0.5, 0.5 + thickness, linePattern);\n    \n    return line;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Correct aspect ratio - center and normalize to square\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / min(iResolution.x, iResolution.y);\n    float aspect = iResolution.x / iResolution.y;\n    \n    // Mouse interaction - normalize mouse coordinates\n    vec2 mousePos = (iMouse.xy - 0.5) * 2.0; // Convert from [0,1] to [-1,1]\n    float mouseDist = length(uv - mousePos);\n    float mouseInfluence = smoothstep(0.5, 0.0, mouseDist);\n    \n    // Base thickness and distortion\n    float baseThickness = 0.05;\n    float baseDistortion = 0.2;\n    \n    // Adjust thickness and distortion based on mouse\n    float thickness = mix(baseThickness, baseThickness * 1.5, mouseInfluence);\n    float distortion = mix(baseDistortion, baseDistortion * 2.0, mouseInfluence);\n    \n    // Generate the wavy lines\n    float line = lines(uv, thickness, distortion);\n    \n    // Add subtle movement over time\n    float timeOffset = sin(iTime * 0.2) * 0.1;\n    float animatedLine = lines(uv + vec2(timeOffset, 0.0), thickness, distortion);\n    \n    // Blend between static and animated lines\n    line = mix(line, animatedLine, 0.3);\n    \n    // Default line colors based on reminder states\n    vec3 backgroundColor = vec3(0.0, 0.0, 0.0);\n    vec3 lineColor;\n    \n    if (hasActiveReminders) {\n        // Blue for active reminders\n        lineColor = vec3(0.2, 0.4, 1.0);\n    } else if (hasUpcomingReminders) {\n        // Green for upcoming reminders\n        lineColor = vec3(0.2, 1.0, 0.4);\n    } else {\n        // White for default\n        lineColor = vec3(1.0, 1.0, 1.0);\n    }\n    \n    vec3 finalColor = mix(backgroundColor, lineColor, line);\n    \n    // Add subtle glow around mouse position\n    if (hasActiveReminders) {\n        finalColor += vec3(0.1, 0.2, 0.5) * mouseInfluence * line;\n    } else if (hasUpcomingReminders) {\n        finalColor += vec3(0.1, 0.5, 0.2) * mouseInfluence * line;\n    } else {\n        finalColor += vec3(0.1, 0.1, 0.1) * mouseInfluence * line;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n    \n    // Calculate distance from center for dimming the center\n    vec2 center = iResolution.xy * 0.5;\n    float dist = distance(fragCoord, center);\n    float radius = min(iResolution.x, iResolution.y) * 0.5;\n    \n    // Create a dimming factor for the center area (30% of the radius)\n    float centerDim = disableCenterDimming ? 1.0 : smoothstep(radius * 0.3, radius * 0.5, dist);\n    \n    // Apply center dimming only if not disabled\n    if (!disableCenterDimming) {\n        fragColor.rgb = mix(fragColor.rgb * 0.3, fragColor.rgb, centerDim);\n    }\n}\n\nvoid main() {\n    vec2 fragCoord = vTextureCoord * iResolution;\n    if (useCircularMask) {\n        // Calculate distance from center for circular mask\n        vec2 center = iResolution * 0.5;\n        float dist = distance(fragCoord, center);\n        float radius = min(iResolution.x, iResolution.y) * 0.5;\n        if (dist < radius) {\n            vec4 color;\n            mainImage(color, fragCoord);\n            gl_FragColor = color;\n        } else {\n            discard;\n        }\n    } else {\n        vec4 color;\n        mainImage(color, fragCoord);\n        gl_FragColor = color;\n    }\n}\n",color:"#10b981"},{id:5,name:"Accretion",theme:"accretion",fragmentShader:'\nprecision mediump float;\nuniform vec2 iResolution;\nuniform float iTime;\nuniform vec2 iMouse;\nuniform bool hasActiveReminders;\nuniform bool hasUpcomingReminders;\nuniform bool disableCenterDimming;\nuniform bool useCircularMask;\nvarying vec2 vTextureCoord;\n\n// "Accretion" by @XorDev (adapted for this app)\n// I discovered an interesting refraction effect by adding the raymarch iterator to the turbulence!\n// https://x.com/XorDev/status/1936884244128661986\n\nvoid mainImage(out vec4 O, vec2 I)\n{\n    // Raymarch variables\n    float z = 0.0;   // depth\n    float d = 0.0;   // step distance\n    O = vec4(0.0);\n\n    // 20 steps as in the original (2e1) — WebGL1-safe loop\n    for (int k = 0; k < 20; ++k) {\n        float fi = float(k) + 1.0; // emulate original iterator (starts at 1)\n        // Sample point (from ray direction) - fix aspect ratio\n        vec2 centeredCoord = (I - iResolution.xy * 0.5) / min(iResolution.x, iResolution.y);\n        vec3 p = z * normalize(vec3(centeredCoord * 2.0, 0.0) - vec3(0.0, 0.0, 1.0)) + 0.1;\n\n        // Polar coordinates and additional transformations\n        p = vec3(atan(p.y / 0.2, p.x) * 2.0, p.z / 3.0, length(p.xy) - 5.0 - z * 0.2);\n\n        // Apply turbulence and refraction effect (int loop for WebGL1)\n        for (int j = 1; j <= 7; ++j) {\n            float fd = float(j);\n            p += sin(p.yzx * fd + iTime + 0.3 * fi) / fd;\n        }\n\n        // Distance to cylinder and waves with refraction\n        z += d = length(vec4(0.4 * cos(p) - 0.4, p.z));\n\n        // Base color modulation\n        vec4 col = (1.0 + cos(p.x + fi * 0.4 + z + vec4(6.0, 1.0, 2.0, 0.0))) / d;\n\n        // Palette shift with reminder state\n        if (hasActiveReminders) {\n            col.rgb = mix(col.rgb, vec3(0.2, 0.4, 1.0), 0.35);\n        } else if (hasUpcomingReminders) {\n            col.rgb = mix(col.rgb, vec3(0.2, 1.0, 0.4), 0.35);\n        }\n\n        // Accumulate\n        O += col;\n    }\n\n    // Tanh tonemap approximation (GLSL ES lacks tanh for genType)\n    vec4 x = (O * O) / 400.0;\n    vec4 e2x = exp(2.0 * x);\n    O = (e2x - 1.0) / (e2x + 1.0);\n}\n\nvoid main() {\n    vec2 fragCoord = vTextureCoord * iResolution;\n\n    // Optional circular mask\n    if (useCircularMask) {\n        vec2 center = iResolution * 0.5;\n        float dist = distance(fragCoord, center);\n        float radius = min(iResolution.x, iResolution.y) * 0.5;\n        if (dist >= radius) {\n            discard;\n        }\n    }\n\n    vec4 color;\n    mainImage(color, fragCoord);\n\n    // Center dimming control\n    if (!disableCenterDimming) {\n        vec2 center = iResolution * 0.5;\n        float dist = distance(fragCoord, center);\n        float radius = min(iResolution.x, iResolution.y) * 0.5;\n        float centerDim = smoothstep(radius * 0.3, radius * 0.5, dist);\n        color.rgb = mix(color.rgb * 0.3, color.rgb, centerDim);\n    }\n\n    gl_FragColor = color;\n}\n',color:"#22d3ee"}],r=Object.fromEntries(o.map(e=>[e.theme,e.id])),a=Object.fromEntries(o.map(e=>[e.id,e.theme]));function s(e){let{theme:a,mode:s,className:l,size:c=600}=e,m=(0,t.useRef)(null),d=(0,t.useRef)(0),u=(0,t.useRef)([.5,.5]),f=(0,t.useRef)(null),g=(0,t.useRef)(null),h=o.find(e=>e.id===r[a])||o[0];function v(e,n,t){let i=e.createShader(n);return i?(e.shaderSource(i,t),e.compileShader(i),e.getShaderParameter(i,e.COMPILE_STATUS))?i:(console.error("An error occurred compiling the shaders: "+e.getShaderInfoLog(i)),e.deleteShader(i),null):null}return(0,t.useEffect)(()=>{let e=m.current;if(!e)return;let n=e.getContext("webgl");if(!n)return void console.error("WebGL not supported");g.current=n;let t=function(e,n,t){let i=v(e,e.VERTEX_SHADER,n),o=v(e,e.FRAGMENT_SHADER,t);if(!i||!o)return null;let r=e.createProgram();return r?(e.attachShader(r,i),e.attachShader(r,o),e.linkProgram(r),e.getProgramParameter(r,e.LINK_STATUS))?r:(console.error("Unable to initialize the shader program: "+e.getProgramInfoLog(r)),null):null}(n,i,h.fragmentShader);if(!t)return;f.current={program:t,attribLocations:{vertexPosition:n.getAttribLocation(t,"aVertexPosition"),textureCoord:n.getAttribLocation(t,"aTextureCoord")},uniformLocations:{iResolution:n.getUniformLocation(t,"iResolution"),iTime:n.getUniformLocation(t,"iTime"),iMouse:n.getUniformLocation(t,"iMouse"),hasActiveReminders:n.getUniformLocation(t,"hasActiveReminders"),hasUpcomingReminders:n.getUniformLocation(t,"hasUpcomingReminders"),disableCenterDimming:n.getUniformLocation(t,"disableCenterDimming"),useCircularMask:n.getUniformLocation(t,"useCircularMask")}};let o=function(e){let n=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,1,1,-1,1]),e.STATIC_DRAW);let t=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,1,1,0,1]),e.STATIC_DRAW);let i=e.createBuffer();return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i),e.bufferData(e.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),e.STATIC_DRAW),{position:n,textureCoord:t,indices:i}}(n),r=Date.now();if("immersive"===s)e.width=window.innerWidth,e.height=window.innerHeight;else{let n=e.getBoundingClientRect();e.width=Math.max(1,Math.round(n.width)),e.height=Math.max(1,Math.round(n.height))}n.viewport(0,0,e.width,e.height);let a=()=>{var t,i,l,c,m,g,h,v,x;let p=(Date.now()-r)/1e3,b=u.current;t=n,i=f.current,l=o,c=p,m=e.width,g=e.height,h=!1,v=!1,x=b,t.clearColor(0,0,0,1),t.clearDepth(1),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.useProgram(i.program),t.uniform2f(i.uniformLocations.iResolution,m,g),t.uniform1f(i.uniformLocations.iTime,c),t.uniform2f(i.uniformLocations.iMouse,x[0],x[1]),t.uniform1i(i.uniformLocations.hasActiveReminders,+!!h),t.uniform1i(i.uniformLocations.hasUpcomingReminders,+!!v),t.uniform1i(i.uniformLocations.disableCenterDimming,1),i.uniformLocations.useCircularMask&&t.uniform1i(i.uniformLocations.useCircularMask,+("simple"===s)),t.bindBuffer(t.ARRAY_BUFFER,l.position),t.vertexAttribPointer(i.attribLocations.vertexPosition,2,t.FLOAT,!1,0,0),t.enableVertexAttribArray(i.attribLocations.vertexPosition),t.bindBuffer(t.ARRAY_BUFFER,l.textureCoord),t.vertexAttribPointer(i.attribLocations.textureCoord,2,t.FLOAT,!1,0,0),t.enableVertexAttribArray(i.attribLocations.textureCoord),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,l.indices),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),d.current=requestAnimationFrame(a)};a();let l=null,c=()=>{e&&g.current&&"immersive"===s&&(e.width=window.innerWidth,e.height=window.innerHeight,g.current.viewport(0,0,e.width,e.height))};return"immersive"===s?window.addEventListener("resize",c):"undefined"!=typeof ResizeObserver&&(l=new ResizeObserver(()=>{if(!e||!g.current)return;let n=e.getBoundingClientRect(),t=Math.max(1,Math.round(n.width)),i=Math.max(1,Math.round(n.height));(e.width!==t||e.height!==i)&&(e.width=t,e.height=i,g.current.viewport(0,0,e.width,e.height))})).observe(e),()=>{cancelAnimationFrame(d.current),n&&t&&n.deleteProgram(t),"immersive"===s&&window.removeEventListener("resize",c),l&&l.disconnect()}},[a,s,c,h.fragmentShader]),(0,n.jsx)("div",{className:"simple"===s?"p-8 md:p-12 lg:p-16":"",children:(0,n.jsx)("canvas",{ref:m,className:"".concat(l," ").concat("simple"===s?"rounded-full w-[80vmin] h-[80vmin] transform-gpu transition-all duration-200 ease-out shadow-[0_0_36px_rgba(255,255,255,0.08)] hover:scale-[1.03] hover:shadow-[0_0_48px_rgba(255,255,255,0.12)] ring-1 ring-white/5 hover:ring-white/10":"w-full h-full"),style:{display:"block"},onMouseLeave:()=>{u.current=[.5,.5]},onMouseMove:e=>{if(!m.current)return;let n=m.current.getBoundingClientRect();u.current=[(e.clientX-n.left)/n.width,(e.clientY-n.top)/n.height]}})})}function l(e){let{mode:t,onModeChange:i,className:o}=e,r="immersive"===t;return(0,n.jsxs)("button",{onClick:()=>i(r?"simple":"immersive"),"aria-label":"Switch to ".concat(r?"Simple":"Immersive"," mode"),"aria-pressed":r,className:"relative inline-flex h-6 w-10 items-center rounded-full border border-white/20 overflow-hidden ".concat(r?"bg-white/20":"bg-white/10"," backdrop-blur-md transition-colors duration-200 hover:bg-white/20 cursor-pointer ").concat(null!=o?o:""),children:[(0,n.jsx)("span",{"aria-hidden":!0,className:"pointer-events-none absolute inset-[-2px] rounded-full bg-white/20 blur-md transition-opacity duration-200 ".concat(r?"opacity-100":"opacity-0")}),(0,n.jsx)("span",{className:"absolute left-1 top-1/2 -translate-y-1/2 h-4 w-4 rounded-full bg-white/80 transition-transform duration-200 ".concat(r?"translate-x-4":"translate-x-0")})]})}let c=e=>{let{shaderId:r,isSelected:a,onSelect:s,onMouseEnter:l,onMouseLeave:c}=e,m=(0,t.useRef)(null),d=(0,t.useRef)(0),u=(0,t.useRef)(null),f=o.find(e=>e.id===r)||o[0];function g(e,n,t){let i=e.createShader(n);return i?(e.shaderSource(i,t),e.compileShader(i),e.getShaderParameter(i,e.COMPILE_STATUS))?i:(console.error("Shader compile error:",e.getShaderInfoLog(i)),e.deleteShader(i),null):null}return(0,t.useEffect)(()=>{let e=m.current;if(!e)return;let n=e.getContext("webgl",{alpha:!0});if(!n)return;e.width=40,e.height=40,n.viewport(0,0,e.width,e.height);let t=function(e,n,t){let i=g(e,e.VERTEX_SHADER,n),o=g(e,e.FRAGMENT_SHADER,t);if(!i||!o)return null;let r=e.createProgram();return r?(e.attachShader(r,i),e.attachShader(r,o),e.linkProgram(r),e.getProgramParameter(r,e.LINK_STATUS))?r:(console.error("Shader link error:",e.getProgramInfoLog(r)),null):null}(n,i,f.fragmentShader);if(!t)return;u.current={program:t,attribLocations:{vertexPosition:n.getAttribLocation(t,"aVertexPosition"),textureCoord:n.getAttribLocation(t,"aTextureCoord")},uniformLocations:{iResolution:n.getUniformLocation(t,"iResolution"),iTime:n.getUniformLocation(t,"iTime"),iMouse:n.getUniformLocation(t,"iMouse"),hasActiveReminders:n.getUniformLocation(t,"hasActiveReminders"),hasUpcomingReminders:n.getUniformLocation(t,"hasUpcomingReminders"),disableCenterDimming:n.getUniformLocation(t,"disableCenterDimming"),useCircularMask:n.getUniformLocation(t,"useCircularMask")}};let o=function(e){let n=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,1,1,-1,1]),e.STATIC_DRAW);let t=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,1,1,0,1]),e.STATIC_DRAW);let i=e.createBuffer();return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i),e.bufferData(e.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),e.STATIC_DRAW),{position:n,textureCoord:t,indices:i}}(n),r=Date.now(),a=()=>{let t=(Date.now()-r)/1e3;(function(e,n,t,i,o,r){n&&(e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.useProgram(n.program),e.uniform2f(n.uniformLocations.iResolution,o,r),e.uniform1f(n.uniformLocations.iTime,i),e.uniform2f(n.uniformLocations.iMouse,.5,.5),e.uniform1i(n.uniformLocations.hasActiveReminders,0),e.uniform1i(n.uniformLocations.hasUpcomingReminders,0),e.uniform1i(n.uniformLocations.disableCenterDimming,1),n.uniformLocations.useCircularMask&&e.uniform1i(n.uniformLocations.useCircularMask,0),e.bindBuffer(e.ARRAY_BUFFER,t.position),e.vertexAttribPointer(n.attribLocations.vertexPosition,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(n.attribLocations.vertexPosition),e.bindBuffer(e.ARRAY_BUFFER,t.textureCoord),e.vertexAttribPointer(n.attribLocations.textureCoord,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(n.attribLocations.textureCoord),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.indices),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))})(n,u.current,o,t,e.width,e.height),d.current=requestAnimationFrame(a)};return a(),()=>{cancelAnimationFrame(d.current),n&&t&&n.deleteProgram(t)}},[r,f.fragmentShader]),(0,n.jsx)("button",{className:"w-10 h-10 rounded-full cursor-pointer border-2 overflow-hidden relative transition-transform duration-150 ".concat(a?"scale-110 ring-2 ring-white/50":"hover:scale-110"),style:{borderColor:a?"white":"rgba(255,255,255,0.3)"},onClick:s,onMouseEnter:l,onMouseLeave:c,"aria-label":"Shader preview",children:(0,n.jsx)("canvas",{ref:m,className:"absolute inset-0 rounded-full",style:{width:"100%",height:"100%"}})})};function m(e){let{selectedShader:i,onSelectShader:r,className:a}=e,[s,l]=(0,t.useState)(null),[m,d]=(0,t.useState)(!1);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("button",{type:"button","aria-label":m?"Close shader selector":"Open shader selector",onClick:()=>d(e=>!e),className:"md:hidden fixed right-4 top-8 z-30 w-11 h-11 rounded-full bg-black/40 border border-white/20 backdrop-blur-md flex items-center justify-center text-white shadow-lg transition-transform active:scale-95 cursor-pointer",children:m?(0,n.jsx)("svg",{width:"20",height:"20",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:(0,n.jsx)("path",{d:"M18 6L6 18M6 6l12 12"})}):(0,n.jsx)("svg",{width:"20",height:"20",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",children:(0,n.jsx)("path",{d:"M12 5v14M5 12h14"})})}),(0,n.jsx)("div",{className:"fixed right-4 top-1/2 -translate-y-1/2 flex flex-col gap-3 z-20 "+"".concat(m?"translate-x-0 opacity-100 pointer-events-auto":"translate-x-8 opacity-0 pointer-events-none"," ")+"transition-all duration-300 ease-out md:translate-x-0 md:opacity-100 md:pointer-events-auto "+"".concat(null!=a?a:""),children:o.map(e=>(0,n.jsx)("div",{className:"".concat(s&&s!==e.id?"opacity-60":"opacity-100"," cursor-pointer"),children:(0,n.jsx)(c,{shaderId:e.id,isSelected:i===e.id,onSelect:()=>r(e.id),onMouseEnter:()=>l(e.id),onMouseLeave:()=>l(null)})},e.id))})]})}function d(e){let{className:i}=e,[o,r]=(0,t.useState)(new Date),[a,s]=(0,t.useState)(!1);(0,t.useEffect)(()=>{s(!0);let e=setInterval(()=>r(new Date),1e3);return()=>clearInterval(e)},[]);let l=e=>e.toLocaleDateString("en-US",{weekday:"long",month:"long",day:"numeric"}),c=(e=>{let n=e.getHours(),t=(n%12||12).toString(),i=e.getMinutes().toString().padStart(2,"0");return{h:t,m:i,sec:e.getSeconds(),period:n>=12?"PM":"AM"}})(o),m=c.sec%2==0;return a?(0,n.jsxs)("div",{className:"pointer-events-none ".concat(null!=i?i:""),children:[(0,n.jsx)("div",{className:"absolute sm:hidden left-1/2 -translate-x-1/2 flex justify-center",style:{top:"calc(50% + 32vmin)"},children:(0,n.jsx)("div",{className:"rounded-full bg-white/5 border border-white/10 backdrop-blur-md shadow-[0_8px_30px_rgba(255,255,255,0.05)] px-5 py-2 text-white/95 min-w-[16rem]",children:(0,n.jsxs)("div",{className:"flex flex-col items-center justify-center gap-1",children:[(0,n.jsxs)("div",{className:"flex items-end gap-2",children:[(0,n.jsx)("span",{className:"font-orbitron text-xl tracking-[0.12em]",children:c.h}),(0,n.jsx)("span",{className:"font-orbitron text-xl tracking-[0.12em] text-white/90 transition-opacity duration-300 ".concat(m?"opacity-25":"opacity-100"),children:":"}),(0,n.jsx)("span",{className:"font-orbitron text-xl tracking-[0.12em]",children:c.m}),(0,n.jsx)("span",{className:"font-rajdhani uppercase text-[10px] tracking-[0.32em] text-white/70 mb-[2px]",children:c.period})]}),(0,n.jsx)("div",{className:"font-rajdhani uppercase text-[10px] tracking-[0.32em] text-white/70",children:l(o)})]})})}),(0,n.jsx)("div",{className:"hidden sm:flex absolute inset-x-0 bottom-14 md:bottom-16 lg:bottom-20 justify-center",children:(0,n.jsx)("div",{className:"rounded-full bg-white/5 border border-white/10 backdrop-blur-md shadow-[0_8px_30px_rgba(255,255,255,0.05)] px-4 sm:px-6 py-2 sm:py-2.5 text-white/95",children:(0,n.jsxs)("div",{className:"flex flex-col items-center justify-center gap-0.5 sm:flex-row sm:gap-3",children:[(0,n.jsxs)("div",{className:"flex items-end gap-2",children:[(0,n.jsx)("span",{className:"font-orbitron text-2xl sm:text-3xl md:text-4xl tracking-[0.12em]",children:c.h}),(0,n.jsx)("span",{className:"font-orbitron text-2xl sm:text-3xl md:text-4xl tracking-[0.12em] text-white/90 transition-opacity duration-300 ".concat(m?"opacity-25":"opacity-100"),children:":"}),(0,n.jsx)("span",{className:"font-orbitron text-2xl sm:text-3xl md:text-4xl tracking-[0.12em]",children:c.m}),(0,n.jsx)("span",{className:"font-rajdhani uppercase text-[10px] sm:text-xs tracking-[0.32em] text-white/70 mb-[2px]",children:c.period})]}),(0,n.jsx)("span",{className:"hidden sm:inline-block w-1 h-1 rounded-full bg-white/20 align-middle"}),(0,n.jsx)("div",{className:"font-rajdhani uppercase text-[10px] sm:text-xs tracking-[0.35em] text-white/75 text-center sm:text-left",children:l(o)})]})})})]}):null}function u(e){let{className:i}=e,[o,r]=(0,t.useState)(new Date);return(0,t.useEffect)(()=>{let e=setInterval(()=>{r(new Date)},1e3);return()=>clearInterval(e)},[]),(0,n.jsx)("div",{className:"absolute inset-0 flex items-center justify-center pointer-events-none ".concat(null!=i?i:""),children:(0,n.jsxs)("div",{className:"relative",children:[(0,n.jsx)("div",{className:"absolute inset-0 w-90 h-90 rounded-full border border-white/10 animate-pulse"}),(0,n.jsxs)("div",{className:"w-90 h-90 rounded-full bg-black/20 backdrop-blur-md border border-white/15 flex flex-col items-center justify-center text-center shadow-2xl overflow-hidden",children:[(0,n.jsxs)("div",{className:"text-white/95 font-light tracking-wider",children:[(()=>{let e=(e=>{let n=e.getHours(),t=(n%12||12).toString();return{hour:t,minute:e.getMinutes().toString().padStart(2,"0"),seconds:e.getSeconds().toString().padStart(2,"0"),period:n>=12?"PM":"AM"}})(o),t=Number(e.seconds)%2==0;return(0,n.jsxs)("div",{className:"flex items-end justify-center gap-3 mb-3 whitespace-nowrap",children:[(0,n.jsxs)("span",{className:"text-5xl sm:text-6xl font-orbitron font-semibold tracking-[0.16em] sm:tracking-[0.18em] text-white drop-shadow-[0_0_12px_rgba(255,255,255,0.25)]",children:["0",e.hour]}),(0,n.jsx)("span",{className:"text-5xl sm:text-6xl font-orbitron tracking-[0.16em] sm:tracking-[0.18em] text-white/90 drop-shadow-[0_0_10px_rgba(255,255,255,0.2)] transition-opacity duration-300 ".concat(t?"opacity-25":"opacity-100"),children:":"}),(0,n.jsx)("span",{className:"text-5xl sm:text-6xl font-orbitron font-semibold tracking-[0.16em] sm:tracking-[0.18em] text-white drop-shadow-[0_0_12px_rgba(255,255,255,0.25)]",children:e.minute}),(0,n.jsx)("span",{className:"self-end mb-[2px] font-rajdhani text-[14px] sm:text-xs leading-none tracking-[0.35em] text-white/85 uppercase",children:e.period})]})})(),(0,n.jsx)("div",{className:"text-sm text-white/80 tracking-[0.25em] font-rajdhani font-medium uppercase",children:o.toLocaleDateString("en-US",{weekday:"long",month:"long",day:"numeric"})})]}),(0,n.jsx)("div",{className:"mt-6 text-white/40 text-xs"})]})]})})}function f(){let[e,i]=(0,t.useState)("simple"),[o,c]=(0,t.useState)("flowing-waves");return(0,t.useEffect)(()=>{let e=localStorage.getItem("feyra-mode"),n=localStorage.getItem("feyra-theme");e&&("simple"===e||"immersive"===e)&&i(e),n&&r[n]&&c(n)},[]),(0,n.jsxs)("div",{className:"relative w-full h-screen overflow-hidden bg-black",children:[(0,n.jsxs)("div",{className:"absolute top-8 left-4 right-4 z-20 flex flex-col sm:flex-row justify-between items-start sm:items-center gap-3",children:[(0,n.jsx)("div",{className:"flex flex-col gap-3",children:(0,n.jsx)(l,{mode:e,onModeChange:e=>{i(e),localStorage.setItem("feyra-mode",e)}})}),(0,n.jsx)("div",{className:"hidden sm:block"})]}),(0,n.jsx)(m,{selectedShader:r[o],onSelectShader:e=>{let n=a[e];n&&(c(n),localStorage.setItem("feyra-theme",n))}}),"simple"===e?(0,n.jsxs)("div",{className:"absolute inset-0 flex items-center justify-center pointer-events-none",children:[(0,n.jsx)(s,{theme:o,mode:e,className:"pointer-events-auto"}),(0,n.jsx)(d,{})]}):(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("div",{className:"absolute inset-0 pointer-events-none",children:(0,n.jsx)(s,{theme:o,mode:e,className:"absolute inset-0 pointer-events-none"})}),(0,n.jsx)(u,{})]})]})}}]);